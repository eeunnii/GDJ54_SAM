<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.app11.mapper.EmpMapper">

	<!-- employees와 departments의 조인을 위한 resultMap 만들기 - 1 -->
	<!--
	<resultMap type="DeptDTO" id="DeptMap">
		<id column="DEPARTMENT_ID" property="departmentId" />
		<result column="DEPARTMENT_NAME" property="departmentName" />
		<result column="MANAGER_ID" property="managerId" />
		<result column="LOCATION_ID" property="locationId" />
	</resultMap>
	<resultMap type="EmpDTO" id="EmpMap">
		<id column="EMPLOYEE_ID" property="employeeId" />
		<result column="FIRST_NAME" property="firstName" />
		<result column="LAST_NAME" property="lastName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="HIRE_DATE" property="hireDate" />
		<result column="JOB_ID" property="jobId" />
		<result column="COMMISSION_PCT" property="commissionPct" />
		<result column="SALARY" property="salary" />
		<result column="MANAGER_ID" property="managerId" />
		<collection resultMap="DeptMap" property="deptDTO"></collection>
	</resultMap>
	-->
	
	<!-- employees와 departments의 조인을 위한 resultMap 만들기 - 2 -->
	<resultMap type="EmpDTO" id="EmpMap">
		<id column="EMPLOYEE_ID" property="employeeId" />  <!-- <result column="EMPLOYEE_ID" property="employeeId" /> -->
		<result column="FIRST_NAME" property="firstName" />
		<result column="LAST_NAME" property="lastName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="HIRE_DATE" property="hireDate" />
		<result column="JOB_ID" property="jobId" />
		<result column="COMMISSION_PCT" property="commissionPct" />
		<result column="SALARY" property="salary" />
		<result column="MANAGER_ID" property="managerId" />
		<association javaType="DeptDTO" property="deptDTO">
			<id column="DEPARTMENT_ID" property="departmentId" />
			<result column="DEPARTMENT_NAME" property="departmentName" />
			<result column="MANAGER_ID" property="managerId" />
			<result column="LOCATION_ID" property="locationId" />
		</association>
	</resultMap>

	<select id="selectAllEmployeesCount" resultType="int">
		SELECT COUNT(*)
		  FROM EMPLOYEES
	</select>
	
	<select id="selectEmployeesByMap" parameterType="Map" resultMap="EmpMap">  <!-- resultType이 아니라 resultMap이다! -->
		
		<!-- 부서번호가 없는 사원이 있어서 외부 조인으로 처리 -->
		
		<!-- ROWNUM 가상 칼럼 사용 -->
		<!--
		SELECT B.*
		  FROM (SELECT ROWNUM AS RN, A.*
		          FROM (SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		                  FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
		                    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
		                  ORDER BY E.HIRE_DATE DESC) A) B
		 WHERE B.RN BETWEEN #{begin} AND #{end}
		-->
		
		<!-- ROW_NUMBER() 함수 사용 -->
		SELECT A.*
	<choose>
		<when test="field == 'DEPARTMENT_ID'">
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY E.DEPARTMENT_ID ${order}) AS RN, E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		</when>
		<otherwise>
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY ${field} ${order}) AS RN, E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		</otherwise>
	</choose>
		          FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
		            ON D.DEPARTMENT_ID = E.DEPARTMENT_ID) A
		 WHERE A.RN BETWEEN #{begin} AND #{end}
		  
	</select>
	
	<select id="selectFindEmployeesCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM EMPLOYEES
		<where>
		    <if test="column=='EMPLOYEE_ID' or column=='DEPARTMENT_ID'">
		    	${column} = #{query}
		    </if>
		    <if test="column=='LAST_NAME' or column=='FIRST_NAME' or column=='PHONE_NUMBER'">
		    	${column} LIKE '%' || #{query} || '%'
		    </if>
		    <if test="column=='HIRE_DATE'">
		    	${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')
		    </if>
		    <if test="column=='SALARY'">
		    	${column} BETWEEN #{start} AND #{stop}
		    </if>
		</where>
		<!--
			WHERE #{column} = #{query}   #{}는 작은 따옴표(')로 묶어서 값을 치환
	     	WHERE 'EMPLOYEE_ID' = '150'  잘못된 사용
	     	
	     	WHERE ${column} = #{query}   ${}는 그냥 치환
			WHERE EMPLOYEE_ID = '150'    정상 동작
		-->
	</select>

	<select id="selectFindEmployees" parameterType="Map" resultMap="EmpMap">
	
		<!-- 조인하기 전에 조건 처리하는 것이 성능에 도움됨 -->
	
		<!-- ROWNUM 가상 칼럼 사용 -->
		<!--
		SELECT B.*
		  FROM (SELECT ROWNUM AS RN, A.*
		          FROM (SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		                  FROM DEPARTMENTS D RIGHT OUTER JOIN (SELECT * 
				                                                 FROM EMPLOYEES
				                                                <where>
												                    <if test="column=='EMPLOYEE_ID' or column=='DEPARTMENT_ID'">
												                    	${column} = #{query}
												                    </if>
												                    <if test="column=='LAST_NAME' or column=='FIRST_NAME' or column=='PHONE_NUMBER'">
												                  		${column} LIKE '%' || #{query} || '%'
												                  	</if>
												                    <if test="column=='HIRE_DATE'">
												                    	${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')
												                    </if>
												                    <if test="column=='SALARY'">
												                    	${column} BETWEEN #{start} AND #{stop}
												                    </if>
												                </where>) E
		                    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
		                 ORDER BY HIRE_DATE DESC) A) B
		 WHERE B.RN BETWEEN #{begin} AND #{end}
		-->
		
		<!-- ROW_NUMBER() 함수 사용 -->
		SELECT A.*
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY E.HIRE_DATE DESC) AS RN, E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		          FROM DEPARTMENTS D RIGHT OUTER JOIN (SELECT * 
		                                                 FROM EMPLOYEES
		                                                <where>
										                    <if test="column=='EMPLOYEE_ID' or column=='DEPARTMENT_ID'">
										                    	${column} = #{query}
										                    </if>
										                    <if test="column=='LAST_NAME' or column=='FIRST_NAME' or column=='PHONE_NUMBER'">
										                    	${column} LIKE '%' || #{query} || '%'
										                    </if>
										                    <if test="column=='HIRE_DATE'">
										                    	${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')
										                    </if>
										                    <if test="column=='SALARY'">
										                    	${column} BETWEEN #{start} AND #{stop}
										                    </if>
										                </where>) E
		              ON D.DEPARTMENT_ID = E.DEPARTMENT_ID) A
		 WHERE A.RN BETWEEN #{begin} AND #{end}
		 
	</select>

	<select id="selectAutoCompleteList" parameterType="Map" resultType="EmpDTO">
		SELECT DISTINCT ${target}
		  FROM EMPLOYEES
		 WHERE ${target} LIKE CONCAT(#{param}, '%')
	</select>

</mapper>